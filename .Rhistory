devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
warnings()
devtools::document()
devtools::document()
devtools::document()
devtools::build_vignettes()
getwd()
devtools::document()
devtools::document()
devtools::document()
getwd()
devtools::document()
devtools::document()
devtools::document()
getwd()
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
getwd()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
setwd("E:/Rpack/StatComp20083")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
library(Rcpp)
detach("package:Rcpp", unload = TRUE)
library(Rcpp)
library(roxygen2)
library(rprojroot)
detach("package:rprojroot", unload = TRUE)
library(tools)
devtools::document()
devtools::document()
devtools::document()
install.packages("roxygen2")
install.packages('roxygen2',dependencies = TRUE)
install.packages("roxygen2", dependencies = TRUE)
devtools::document()
install.packages("Rcpp", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
devtools::document()
devtools::build()
install.packages("Rtools", dependencies = TRUE)
install.packages("Rtools40", dependencies = TRUE)
install.packages("https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages", dependencies = TRUE)
library(Rtools)
library(Rtools40)
library(rtools)
devtools::document()
devtools::document()
devtools::build()
devtools::vignettes()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::check()
devtools::buiod()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
devtools::build_vignettes()
devtools::check()
devtools::build_vignettes()
library(test)
tm1 <- microbenchmark::microbenchmark(
rw3 = rw.Metropolis(2,25,2000),
crw3 = crw(2,25,2000)
)
print(summary(tm1)[,c(1,3,5,6)])
trials
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::build_vignettes()
library(StatComp20083)
library(StatComp20083)
HW6_2_4()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
library(stats4)
n=c(444,132,361,63)
p0=0.1;q0=0.1;
p1=1;q1=1;
p2=q2=c(0.1)
while( (abs(p0-p1)+abs(q0-q1))>0.0000001 ){
mlogL=function(p=0.1,q=0.1){
return( -(2*n[3]*log(1-p-q)+n[1]*(log(p*(1-p-q))+p0/(2-p0-2*q0)*log(p/(1-p-q)))+n[2]*(log(q*(1-p-q))+q0/(2-q0-2*p0)*log(q/(1-p-q)))+n[4]*log(p*q) ))
}
fit=mle(mlogL)
q1=q0;p1=p0;
p0=as.numeric(fit@coef)[1]
q0=as.numeric(fit@coef)[2]
p2=c(p2,p0)
q2=c(q2,q0)
}
print(c(p0,q0))
devtools::build_vignettes()
library(Rcpp)
set.seed(980904)
dir_cpp='../vignettes/'
sourceCpp(paste0(dir_cpp,"crw.cpp"))
rw.Metropolis=function(sigma, x0, N) {
x=numeric(N)
x[1]=x0
u=runif(N)
k=0
for(i in 2:N){
y=rnorm(1,x[i-1],sigma)
if(u[i]<=((1/2*exp(-abs(y)))/(1/2*exp(-abs(x[i-1])))))
x[i]=y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
N=2000
sigma=c(.05,.5,2,16)
x0=25
rw1=rw.Metropolis(sigma[1],x0,N)
rw2=rw.Metropolis(sigma[2],x0,N)
rw3=rw.Metropolis(sigma[3],x0,N)
rw4=rw.Metropolis(sigma[4],x0,N)
crw1=crw(sigma[1],x0,N)
crw2=crw(sigma[2],x0,N)
crw3=crw(sigma[3],x0,N)
crw4=crw(sigma[4],x0,N)
#number of candidate points rejected
no.reject=data.frame(sigma=sigma,no.reject=c(crw1$k,crw2$k,crw3$k,crw4$k))
knitr::kable(no.reject)
refline=c(log(1/20),-log(1/20))
rw=cbind(crw1$x, crw2$x, crw3$x,  crw4$x)
for (j in 1:4) {
plot(rw[,j], type="l",
xlab=bquote(sigma == .(round(sigma[j],3))),
ylab="X", ylim=range(rw[,j]))
abline(h=refline)
}
a=c(.05, seq(.1, .9, .1), .95)
Q=c(log(2*a[1:6]),-log(2*(1-a[7:11])))
rw=cbind(crw1$x, crw2$x, crw3$x, crw4$x)
mc=rw[501:N, ]
Qrw=apply(mc, 2, function(x) quantile(x, a))
qq=data.frame(round(cbind(Q, Qrw), 3))
names(qq)=c('True','sigma=0.05','sigma=0.5','sigma=2','sigma=16')
knitr::kable(qq)
sourceCpp(paste0(dir_cpp,"crw.cpp"))
dir_cpp
getwd()
paste0(dir_cpp,"crw.cpp")
dir_cpp="../StatComp20083/vignettes/"
sourceCpp(paste0(dir_cpp,"crw.cpp"))
library(Rcpp)
set.seed(980904)
dir_cpp="../StatComp20083/vignettes/"
sourceCpp(paste0(dir_cpp,"crw.cpp"))
library(Rcpp)
set.seed(980904)
dir_cpp="../vignettes/"
sourceCpp(paste0(dir_cpp,"crw.cpp"))
rw.Metropolis=function(sigma, x0, N) {
x=numeric(N)
x[1]=x0
u=runif(N)
k=0
for(i in 2:N){
y=rnorm(1,x[i-1],sigma)
if(u[i]<=((1/2*exp(-abs(y)))/(1/2*exp(-abs(x[i-1])))))
x[i]=y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
N=2000
sigma=c(.05,.5,2,16)
x0=25
rw1=rw.Metropolis(sigma[1],x0,N)
rw2=rw.Metropolis(sigma[2],x0,N)
rw3=rw.Metropolis(sigma[3],x0,N)
rw4=rw.Metropolis(sigma[4],x0,N)
crw1=crw(sigma[1],x0,N)
crw2=crw(sigma[2],x0,N)
crw3=crw(sigma[3],x0,N)
crw4=crw(sigma[4],x0,N)
#number of candidate points rejected
no.reject=data.frame(sigma=sigma,no.reject=c(crw1$k,crw2$k,crw3$k,crw4$k))
knitr::kable(no.reject)
refline=c(log(1/20),-log(1/20))
rw=cbind(crw1$x, crw2$x, crw3$x,  crw4$x)
for (j in 1:4) {
plot(rw[,j], type="l",
xlab=bquote(sigma == .(round(sigma[j],3))),
ylab="X", ylim=range(rw[,j]))
abline(h=refline)
}
a=c(.05, seq(.1, .9, .1), .95)
Q=c(log(2*a[1:6]),-log(2*(1-a[7:11])))
rw=cbind(crw1$x, crw2$x, crw3$x, crw4$x)
mc=rw[501:N, ]
Qrw=apply(mc, 2, function(x) quantile(x, a))
qq=data.frame(round(cbind(Q, Qrw), 3))
names(qq)=c('True','sigma=0.05','sigma=0.5','sigma=2','sigma=16')
knitr::kable(qq)
devtools::build_vignettes()
devtools::build_vignettes()
library(StatComp20083)
rm(crw)
rm(mlogL)
rm(rw.Metropolis)
library(StatComp20083)
devtools::document()
warnings
warnings()
devtools::document()
devtools::build_vignettes()
log(1-0.1-0.1)
library(StatComp20083)
library(StatComp20083)
devtools::check()
devtools::check()
library(histogram)
class(histogram)
HW1_1()
vignette <- readRDS("E:/Rpack/StatComp20083/Meta/vignette.rds")
devtools::check()
library(ironslag)
ironslag
ironslag$magnetic
library(DAAG)
ironslag$magnetic
devtools::check()
law
library(bootstrap)
law
scor
devtools::check()
devtools::check()
mtcars
devtools::check()
devtools::check()
faithful
rm(bootstrap)
close(bootstrap
)
library(help="DAAG").
library(help="DAAG")
devtools::check()
devtools::check()
devtools::document()
devtools::document()
> devtools::document()
devtools::document()
devtools::check()
devtools::build()
library(StatComp20083)
devtools::check()
devtools::document()
devtools::document()
Sys.which(make)
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which(make)
Sys.which('make')
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which('make')
Sys.which('make')
devtools::document()
devtools::check()
